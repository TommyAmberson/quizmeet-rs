use crate::quiz_sum::{quiz::Quiz, quizzer::Quizzer, team::Team};
use spreadsheet_ods::{Sheet, Value, WorkBook};

#[derive(Debug)]
pub struct QuizFile {
    path: String,
    quiz: Quiz,
}

pub fn parse() {
    let path = std::path::Path::new("tests/D1Q1.ods");
    let wb = spreadsheet_ods::read_ods(path).unwrap();
    let sheet = wb.sheet(1);
    let name = sheet.value(1, 1).as_str_opt().unwrap();
    let mut teams: Vec<Team> = Vec::new();
    for row in 2..4 {
        // let name = String::from(sheet.value(row, 0).as_str_opt().unwrap());
        let name = String::from(name);
        let quiz = String::from(sheet.value(row, 2).as_str_opt().unwrap());
        let place = sheet.value(row, 3).as_f64_opt().unwrap();
        let score = sheet.value(row, 4).as_i32_opt().unwrap();
        let points = sheet.value(row, 5).as_i32_opt().unwrap();
        let errors = sheet.value(row, 6).as_i32_opt().unwrap();
        let team = Team::new(name, quiz, place, score, points, errors);
        teams.push(team);
    }
    let mut quizzers: Vec<Quizzer> = Vec::new();
    for row in 7..21 {
        // let name = String::from(sheet.value(row, 0).as_str_opt().unwrap());
        let name = String::from(name);
        let team = String::from(sheet.value(row, 2).as_str_opt().unwrap());
        let quiz = String::from(sheet.value(row, 3).as_str_opt().unwrap());
        let points = sheet.value(row, 4).as_i32_opt().unwrap();
        let errors = sheet.value(row, 5).as_i32_opt().unwrap();
        let jumps = sheet.value(row, 6).as_i32_opt().unwrap();
        let refer = sheet.value(row, 7).as_i32_opt().unwrap();
        let ftv = sheet.value(row, 8).as_i32_opt().unwrap();
        let int = sheet.value(row, 9).as_i32_opt().unwrap();
        let ma = sheet.value(row, 10).as_i32_opt().unwrap();
        let q = sheet.value(row, 11).as_i32_opt().unwrap();
        let sit = sheet.value(row, 12).as_i32_opt().unwrap();
        let quizzer = Quizzer::new(
            name, team, quiz, points, errors, jumps, refer, ftv, int, ma, q, sit,
        );
        quizzers.push(quizzer);
    }
    let name = String::from(name);
    let quiz = Quiz::new(name, teams, quizzers);

    quiz.print();
}
